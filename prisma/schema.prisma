// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model UserSettings {
  userId   String @id
  currency String
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  userId      String // Foreign key for the user

  startDate DateTime?
  deadline  DateTime?

  tasks    Task[] // Relationship to tasks
  budgetId String? // Optional: Link to a budget (if each project has its own budgeting)

  status         String @default("ONGOING")
  priority       String @default("Medium")
  budget         Float?
  numberOfTasks  Int    @default(0)
  completedTasks Int    @default(0)
}

model Task {
  id          String   @id @default(uuid())
  name        String
  description String?
  updatedAt   DateTime @default(now())
  projectId   String // Foreign key for the project
  project     Project  @relation(fields: [projectId], references: [id])
}

model Category {
  createdAt DateTime @default(now())
  name      String
  userId    String
  icon      String
  type      String   @default("income")

  @@unique([name, userId, type])
}

model Transaction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  amount       Float
  description  String
  date         DateTime
  userId       String
  type         String   @default("income")
  category     String
  categoryIcon String

  // Relationship: A transaction is associated with a user via userId
  // Relationship: A transaction is associated with a category via category and categoryIcon
}

model MonthHistory {
  userId  String
  day     Int
  month   Int
  year    Int
  income  Float
  expense Float
  // Relationship: MonthHistory is associated with a user via userId

  @@id([day, month, year, userId])
}

model YearHistory {
  userId  String
  month   Int
  year    Int
  income  Float
  expense Float
  // Relationship: YearHistory is associated with a user via userId

  @@id([month, year, userId])
}
